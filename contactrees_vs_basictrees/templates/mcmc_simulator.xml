<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE note [
    <!ENTITY blockrange "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99">
]>
<beast version='2.0'
       namespace='beast.evolution.tree
                 :beast.evolution.tree.coalescent
                 :beast.evolution.alignment
                 :beast.evolution.operators
                 :beast.evolution.sitemodel
                 :beast.evolution.substitutionmodel
                 :beast.math.distributions
                 :beast.evolution.nuc
                 :beast.core
                 :beast.core.util
                 :beast.core.parameter
                 :contactrees
                 :contactrees.model
                 :contactrees.util
                 :contactrees.operators'>

<taxonset id="taxa" spec="TaxonSet">
    {{#taxa}}
    <taxon id="{{.}}" spec="Taxon"/>
    {{/taxa}}
</taxonset>
<!-- DATA -->
<plate var="x" range="&blockrange;">
    <data id="simulated.block.$(x)" dataType="binary">
        {{#taxa}}
        <sequence taxon="{{.}}" totalcount="2">?</sequence>
        {{/taxa}}
    </data>
</plate>



<!-- MAP BLOCK -->
<map name="Uniform">beast.math.distributions.Uniform</map>
<map name="Exponential">beast.math.distributions.Exponential</map>
<map name="LogNormal">beast.math.distributions.LogNormalDistributionModel</map>
<map name="Normal">beast.math.distributions.Normal</map>
<map name="Beta">beast.math.distributions.Beta</map>
<map name="Gamma">beast.math.distributions.Gamma</map>
<map name="LaplaceDistribution">beast.math.distributions.LaplaceDistribution</map>
<map name="prior">beast.math.distributions.Prior</map>
<map name="InverseGamma">beast.math.distributions.InverseGamma</map>
<map name="OneOnX">beast.math.distributions.OneOnX</map>


<!-- BLOCK-SET DECLARATION -->
<stateNode spec="BlockSet" id="allBlocks" network="@acg">
	<plate var="x" range="&blockrange;">
		<block spec="Block" id="block$(x).sim"/>
	</plate>
</stateNode>


<siteModel id="siteModel" spec="SiteModel">
{{{substitution_model}}}
</siteModel>
{{{clock_model}}}


<!-- MCMC -->
<run id="mcmc" spec="MCMC" chainLength="{{chain_length}}" >


    <!-- STATE -->
    <state id="state" storeEvery="10000">
        <stateNode id="acg" spec="ConversionGraph" taxonset="@taxa" />
        <plate var="x" range="&blockrange;">
            <stateNode idref="block$(x).sim"/>
        </plate>

{{#parameters}}
{{{.}}}
{{/parameters}}
    </state>

    <!-- INITIALIZER -->
    <init id="RandomACG" spec="beast.evolution.tree.SimpleRandomTree" estimate="false" initial="@acg" taxa="@simulated.block.0" rootHeight="1.0" limitCalibrations="0.9" branchMean="0.05" />
    

    <!-- PRIOR -->
    <distribution id="prior" spec="util.CompoundDistribution">

{{{population_model}}}

{{#priors}}
{{{.}}}
{{/priors}}

    </distribution>


    <!-- Operators -->
{{#priorOperators}}
{{{.}}}
{{/priorOperators}}


    <!-- LOGGERS -->
    <logger id="tracelog"  spec="Logger" fileName="$(filebase).log" logEvery="{{sample_interval}}"
            sanitiseHeaders="true" sort="smart">
        <log idref="prior"/>
{{#logs}}
{{{.}}}
{{/logs}}
    </logger>

    <logger id="screenlog" spec="Logger" logEvery="{{sample_interval}}">
        <log idref="prior"/>
{{#logs}}
{{{.}}}
{{/logs}}
    </logger>

    <logger spec="Logger" fileName="$(filebase).trees" logEvery="{{sample_interval}}" mode="tree">
    	<log spec="ACGWithMetaDataLogger" network="@acg" blockSet="@allBlocks" branchratemodel="@clock"/>
    </logger>
</run>
  
</beast>
